services:
  inverter_reader_service:
    build: ./InverterReaderService
    container_name: inverter_reader_service
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
    ports:
      - "5001:80"
    restart: always
    networks:
      - app_network

  persistence_service:
    build: ./PersistenceService
    container_name: persistence_service
    ports:
      - "5002:80"
    restart: always
    networks:
      - app_network

  api_gateway:
    build: ./ApiGateway
    container_name: api_gateway
    ports:
      - "5000:80"
    depends_on:
      - inverter_reader_service
      - persistence_service
    networks:
      - app_network

  webapp:
    build:
      context: .
      dockerfile: WebApp/Dockerfile
    container_name: webapp
    ports:
      - "5003:80"
    networks:
      - app_network

  postgres-db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inverter_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres-data:
